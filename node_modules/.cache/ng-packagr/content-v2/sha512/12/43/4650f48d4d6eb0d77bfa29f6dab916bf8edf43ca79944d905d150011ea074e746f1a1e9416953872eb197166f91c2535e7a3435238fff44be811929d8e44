{"hash":"9ff69a1425c3d500899530051a153899457fee87","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@ionic/angular';\nimport { IonicModule } from '@ionic/angular';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass IonicRatingService {\n    constructor() {\n        this.starRatingSubject = new Subject();\n        this.topicSubject = new Subject();\n    }\n    publishStartRatingChanged(value) {\n        this.starRatingSubject.next(value);\n    }\n    getStartRatingChangedObservable() {\n        return this.starRatingSubject;\n    }\n    publishTopic(topic, value) {\n        this.topicSubject.next({ topic, value });\n    }\n    getTopicObservable(key) {\n        return this.topicSubject[key];\n    }\n}\nIonicRatingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nIonicRatingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass IonicRatingComponent {\n    constructor(ionicRatingService) {\n        this.ionicRatingService = ionicRatingService;\n        this.iconsArray = [];\n        this.ratingChanged = new EventEmitter();\n        this.readonly = 'false';\n        this.activeColor = '#488aff';\n        this.defaultColor = '#aaaaaa';\n        this.activeIcon = 'star';\n        this.defaultIcon = 'star-outline';\n        this.halfIcon = 'star-half';\n        this.halfStar = 'false';\n        this.maxRating = 5;\n        this.fontSize = '28px';\n        this.eventInfo = (() => {\n            const id = new Date().getTime();\n            const topic = `star-rating:${id}:changed`;\n            return {\n                topic,\n            };\n        })();\n        this.Math = Math;\n        this.parseFloat = parseFloat;\n    }\n    set rating(val) {\n        this._rating = val;\n        if (this.onChange) {\n            this.onChange(val);\n        }\n    }\n    get rating() {\n        return this._rating;\n    }\n    ngOnInit() {\n        this.rating = this.rating || 3; //default after input`s initialization\n        for (let i = 0; i < this.maxRating; i++) {\n            this.iconsArray.push(i);\n        }\n    }\n    writeValue(obj) {\n        this.rating = obj;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.readonly = isDisabled ? \"true\" : \"false\";\n    }\n    changeRating(event) {\n        if (this.readonly && this.readonly === 'true')\n            return;\n        // event is different for firefox and chrome\n        let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n        if (this.halfStar && this.halfStar === 'true') {\n            this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n        }\n        else {\n            this.rating = id + 1;\n        }\n        // subscribe this event to get the changed value in your parent compoanent\n        this.ionicRatingService.publishStartRatingChanged(this.rating);\n        this.ionicRatingService.publishTopic(this.eventInfo.topic, this.rating);\n        // unique event\n        this.ratingChanged.emit(this.rating);\n    }\n}\nIonicRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponent, deps: [{ token: IonicRatingService }], target: i0.ɵɵFactoryTarget.Component });\nIonicRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: IonicRatingComponent, selector: \"ionic-rating-component\", inputs: { rating: \"rating\", readonly: \"readonly\", activeColor: \"activeColor\", defaultColor: \"defaultColor\", activeIcon: \"activeIcon\", defaultIcon: \"defaultIcon\", halfIcon: \"halfIcon\", halfStar: \"halfStar\", maxRating: \"maxRating\", fontSize: \"fontSize\" }, outputs: { ratingChanged: \"ratingChanged\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IonicRatingComponent,\n            multi: true,\n        },\n    ], ngImport: i0, template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, isInline: true, styles: [\".rate-button{--padding-bottom:0;--padding-end:0;--padding-start:0;--padding-top:0}\\n\"], components: [{ type: i2.IonButton, selector: \"ion-button\", inputs: [\"buttonType\", \"color\", \"disabled\", \"download\", \"expand\", \"fill\", \"form\", \"href\", \"mode\", \"rel\", \"routerAnimation\", \"routerDirection\", \"shape\", \"size\", \"strong\", \"target\", \"type\"] }, { type: i2.IonIcon, selector: \"ion-icon\", inputs: [\"color\", \"flipRtl\", \"icon\", \"ios\", \"lazy\", \"md\", \"mode\", \"name\", \"sanitize\", \"size\", \"src\"] }], directives: [{ type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ionic-rating-component',\n                    template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, styles: [`\n    .rate-button {\n            --padding-bottom:0;\n            --padding-end:0;\n            --padding-start:0;\n            --padding-top:0;\n    }\n  `],\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: IonicRatingComponent,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: IonicRatingService }]; }, propDecorators: { rating: [{\n                type: Input\n            }], ratingChanged: [{\n                type: Output\n            }], readonly: [{\n                type: Input\n            }], activeColor: [{\n                type: Input\n            }], defaultColor: [{\n                type: Input\n            }], activeIcon: [{\n                type: Input\n            }], defaultIcon: [{\n                type: Input\n            }], halfIcon: [{\n                type: Input\n            }], halfStar: [{\n                type: Input\n            }], maxRating: [{\n                type: Input\n            }], fontSize: [{\n                type: Input\n            }] } });\n\nclass IonicRatingComponentModule {\n}\nIonicRatingComponentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nIonicRatingComponentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, declarations: [IonicRatingComponent], imports: [CommonModule,\n        IonicModule], exports: [IonicRatingComponent] });\nIonicRatingComponentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, imports: [[\n            CommonModule,\n            IonicModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [IonicRatingComponent],\n                    imports: [\n                        CommonModule,\n                        IonicModule,\n                    ],\n                    exports: [IonicRatingComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ionic-rating\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicRatingComponent, IonicRatingComponentModule, IonicRatingService };\n//# sourceMappingURL=ionic-rating-component.mjs.map\n","map":{"version":3,"file":"ionic-rating-component.mjs","sources":["../../../src/lib/ionic-rating.service.ts","../../../src/lib/ionic-rating.component.ts","../../../src/lib/ionic-rating.module.ts","../../../src/public-api.ts","../../../src/ionic-rating-component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IonicRatingService {\n\n  private starRatingSubject = new Subject<number>();\n  private topicSubject = new Subject<{ [key: string]: any }>();\n\n  publishStartRatingChanged(value: number) {\n    this.starRatingSubject.next(value);\n  }\n\n  getStartRatingChangedObservable(): Subject<any> {\n    return this.starRatingSubject;\n  }\n\n  publishTopic(topic: string, value: number) {\n    this.topicSubject.next({ topic, value });\n  }\n\n  getTopicObservable(key): Subject<any> {\n    return this.topicSubject[key];\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonicRatingService } from './ionic-rating.service';\n\n@Component({\n  selector: 'ionic-rating-component',\n  template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, styles: [`\n    .rate-button {\n            --padding-bottom:0;\n            --padding-end:0;\n            --padding-start:0;\n            --padding-top:0;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: IonicRatingComponent,\n      multi: true,\n    },\n  ],\n})\nexport class IonicRatingComponent implements ControlValueAccessor, OnInit {\n  @Input()\n  public set rating(val: number) {\n    this._rating = val;\n    if (this.onChange) {\n      this.onChange(val);\n    }\n  }\n\n\n  public get rating(): number {\n    return this._rating;\n  }\n\n\n  constructor(private ionicRatingService: IonicRatingService) {\n    this.Math = Math;\n    this.parseFloat = parseFloat;\n  }\n  private _rating: number;\n  private onChange: any;\n  private onTouched: any;\n  public disabled: boolean;\n  Math: any;\n  parseFloat: any;\n  iconsArray: number[] = [];\n  @Output()\n  ratingChanged: EventEmitter<number> = new EventEmitter<number>();\n  @Input()\n  readonly: string = 'false';\n  @Input()\n  activeColor: string = '#488aff';\n  @Input()\n  defaultColor: string = '#aaaaaa';\n  @Input()\n  activeIcon: string = 'star';\n  @Input()\n  defaultIcon: string = 'star-outline';\n  @Input()\n  halfIcon: string = 'star-half';\n  @Input()\n  halfStar: string = 'false';\n  @Input()\n  maxRating: number = 5;\n  @Input()\n  fontSize: string = '28px';\n\n  public readonly eventInfo = (() => {\n    const id = new Date().getTime();\n    const topic = `star-rating:${id}:changed`;\n    return {\n      topic,\n    };\n  })();\n\n  ngOnInit(): void {\n    this.rating = this.rating || 3; //default after input`s initialization\n    for (let i = 0; i < this.maxRating; i++) {\n      this.iconsArray.push(i);\n    }\n  }\n\n  writeValue(obj: number): void {\n    this.rating = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.readonly = isDisabled ? \"true\" : \"false\";\n  }\n\n  changeRating(event) {\n    if (this.readonly && this.readonly === 'true') return;\n    // event is different for firefox and chrome\n    let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n    if (this.halfStar && this.halfStar === 'true') {\n      this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n    } else {\n      this.rating = id + 1;\n    }\n    // subscribe this event to get the changed value in your parent compoanent\n    this.ionicRatingService.publishStartRatingChanged(this.rating);\n    this.ionicRatingService.publishTopic(this.eventInfo.topic, this.rating);\n    // unique event\n    this.ratingChanged.emit(this.rating);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IonicRatingComponent } from './ionic-rating.component';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [IonicRatingComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n  ],\n  exports: [IonicRatingComponent]\n})\nexport class IonicRatingComponentModule { }\n","/*\n * Public API Surface of ionic-rating\n */\n\nexport * from './lib/ionic-rating.service';\nexport * from './lib/ionic-rating.component';\nexport * from './lib/ionic-rating.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.IonicRatingService"],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@ionic/angular';\nimport { IonicModule } from '@ionic/angular';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass IonicRatingService {\n    constructor() {\n        this.starRatingSubject = new Subject();\n        this.topicSubject = new Subject();\n    }\n    publishStartRatingChanged(value) {\n        this.starRatingSubject.next(value);\n    }\n    getStartRatingChangedObservable() {\n        return this.starRatingSubject;\n    }\n    publishTopic(topic, value) {\n        this.topicSubject.next({ topic, value });\n    }\n    getTopicObservable(key) {\n        return this.topicSubject[key];\n    }\n}\nIonicRatingService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nIonicRatingService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass IonicRatingComponent {\n    constructor(ionicRatingService) {\n        this.ionicRatingService = ionicRatingService;\n        this.iconsArray = [];\n        this.ratingChanged = new EventEmitter();\n        this.readonly = 'false';\n        this.activeColor = '#488aff';\n        this.defaultColor = '#aaaaaa';\n        this.activeIcon = 'star';\n        this.defaultIcon = 'star-outline';\n        this.halfIcon = 'star-half';\n        this.halfStar = 'false';\n        this.maxRating = 5;\n        this.fontSize = '28px';\n        this.eventInfo = (() => {\n            const id = new Date().getTime();\n            const topic = `star-rating:${id}:changed`;\n            return {\n                topic,\n            };\n        })();\n        this.Math = Math;\n        this.parseFloat = parseFloat;\n    }\n    set rating(val) {\n        this._rating = val;\n        if (this.onChange) {\n            this.onChange(val);\n        }\n    }\n    get rating() {\n        return this._rating;\n    }\n    ngOnInit() {\n        this.rating = this.rating || 3; //default after input`s initialization\n        for (let i = 0; i < this.maxRating; i++) {\n            this.iconsArray.push(i);\n        }\n    }\n    writeValue(obj) {\n        this.rating = obj;\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.readonly = isDisabled ? \"true\" : \"false\";\n    }\n    changeRating(event) {\n        if (this.readonly && this.readonly === 'true')\n            return;\n        // event is different for firefox and chrome\n        let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n        if (this.halfStar && this.halfStar === 'true') {\n            this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n        }\n        else {\n            this.rating = id + 1;\n        }\n        // subscribe this event to get the changed value in your parent compoanent\n        this.ionicRatingService.publishStartRatingChanged(this.rating);\n        this.ionicRatingService.publishTopic(this.eventInfo.topic, this.rating);\n        // unique event\n        this.ratingChanged.emit(this.rating);\n    }\n}\nIonicRatingComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponent, deps: [{ token: IonicRatingService }], target: i0.ɵɵFactoryTarget.Component });\nIonicRatingComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.12\", type: IonicRatingComponent, selector: \"ionic-rating-component\", inputs: { rating: \"rating\", readonly: \"readonly\", activeColor: \"activeColor\", defaultColor: \"defaultColor\", activeIcon: \"activeIcon\", defaultIcon: \"defaultIcon\", halfIcon: \"halfIcon\", halfStar: \"halfStar\", maxRating: \"maxRating\", fontSize: \"fontSize\" }, outputs: { ratingChanged: \"ratingChanged\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: IonicRatingComponent,\n            multi: true,\n        },\n    ], ngImport: i0, template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, isInline: true, styles: [\".rate-button{--padding-bottom:0;--padding-end:0;--padding-start:0;--padding-top:0}\\n\"], components: [{ type: i2.IonButton, selector: \"ion-button\", inputs: [\"buttonType\", \"color\", \"disabled\", \"download\", \"expand\", \"fill\", \"form\", \"href\", \"mode\", \"rel\", \"routerAnimation\", \"routerDirection\", \"shape\", \"size\", \"strong\", \"target\", \"type\"] }, { type: i2.IonIcon, selector: \"ion-icon\", inputs: [\"color\", \"flipRtl\", \"icon\", \"ios\", \"lazy\", \"md\", \"mode\", \"name\", \"sanitize\", \"size\", \"src\"] }], directives: [{ type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ionic-rating-component',\n                    template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, styles: [`\n    .rate-button {\n            --padding-bottom:0;\n            --padding-end:0;\n            --padding-start:0;\n            --padding-top:0;\n    }\n  `],\n                    providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: IonicRatingComponent,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }], ctorParameters: function () { return [{ type: IonicRatingService }]; }, propDecorators: { rating: [{\n                type: Input\n            }], ratingChanged: [{\n                type: Output\n            }], readonly: [{\n                type: Input\n            }], activeColor: [{\n                type: Input\n            }], defaultColor: [{\n                type: Input\n            }], activeIcon: [{\n                type: Input\n            }], defaultIcon: [{\n                type: Input\n            }], halfIcon: [{\n                type: Input\n            }], halfStar: [{\n                type: Input\n            }], maxRating: [{\n                type: Input\n            }], fontSize: [{\n                type: Input\n            }] } });\n\nclass IonicRatingComponentModule {\n}\nIonicRatingComponentModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nIonicRatingComponentModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, declarations: [IonicRatingComponent], imports: [CommonModule,\n        IonicModule], exports: [IonicRatingComponent] });\nIonicRatingComponentModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, imports: [[\n            CommonModule,\n            IonicModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.12\", ngImport: i0, type: IonicRatingComponentModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [IonicRatingComponent],\n                    imports: [\n                        CommonModule,\n                        IonicModule,\n                    ],\n                    exports: [IonicRatingComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of ionic-rating\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { IonicRatingComponent, IonicRatingComponentModule, IonicRatingService };\n//# sourceMappingURL=ionic-rating-component.mjs.map\n","map":{"version":3,"file":"ionic-rating-component.mjs","sources":["../../../src/lib/ionic-rating.service.ts","../../../src/lib/ionic-rating.component.ts","../../../src/lib/ionic-rating.module.ts","../../../src/public-api.ts","../../../src/ionic-rating-component.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IonicRatingService {\n\n  private starRatingSubject = new Subject<number>();\n  private topicSubject = new Subject<{ [key: string]: any }>();\n\n  publishStartRatingChanged(value: number) {\n    this.starRatingSubject.next(value);\n  }\n\n  getStartRatingChangedObservable(): Subject<any> {\n    return this.starRatingSubject;\n  }\n\n  publishTopic(topic: string, value: number) {\n    this.topicSubject.next({ topic, value });\n  }\n\n  getTopicObservable(key): Subject<any> {\n    return this.topicSubject[key];\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonicRatingService } from './ionic-rating.service';\n\n@Component({\n  selector: 'ionic-rating-component',\n  template: `\n    <div class=\"ionic5-star-rating\">\n      <ion-button size=\"large\" fill=\"clear\" class=\"rate-button\" [ngStyle]=\"{'width' : fontSize, 'height' : fontSize}\" *ngFor=\"let index of iconsArray\" id=\"{{index}}\" (click)=\"changeRating($event)\">\n        <ion-icon [ngStyle]=\"{'color': ((halfStar === 'false' && index < this.Math.round(this.parseFloat(rating))) || (halfStar === 'true' && index < this.parseFloat(rating))) ? activeColor : defaultColor, 'font-size' : fontSize }\" name=\"{{(halfStar ==='true' && (rating - index > 0) && (rating - index <= 0.5)) ? halfIcon : (index < this.Math.round(this.parseFloat(rating))) ? activeIcon : defaultIcon}}\"></ion-icon>\n      </ion-button>\n    </div>\n  `, styles: [`\n    .rate-button {\n            --padding-bottom:0;\n            --padding-end:0;\n            --padding-start:0;\n            --padding-top:0;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: IonicRatingComponent,\n      multi: true,\n    },\n  ],\n})\nexport class IonicRatingComponent implements ControlValueAccessor, OnInit {\n  @Input()\n  public set rating(val: number) {\n    this._rating = val;\n    if (this.onChange) {\n      this.onChange(val);\n    }\n  }\n\n\n  public get rating(): number {\n    return this._rating;\n  }\n\n\n  constructor(private ionicRatingService: IonicRatingService) {\n    this.Math = Math;\n    this.parseFloat = parseFloat;\n  }\n  private _rating: number;\n  private onChange: any;\n  private onTouched: any;\n  public disabled: boolean;\n  Math: any;\n  parseFloat: any;\n  iconsArray: number[] = [];\n  @Output()\n  ratingChanged: EventEmitter<number> = new EventEmitter<number>();\n  @Input()\n  readonly: string = 'false';\n  @Input()\n  activeColor: string = '#488aff';\n  @Input()\n  defaultColor: string = '#aaaaaa';\n  @Input()\n  activeIcon: string = 'star';\n  @Input()\n  defaultIcon: string = 'star-outline';\n  @Input()\n  halfIcon: string = 'star-half';\n  @Input()\n  halfStar: string = 'false';\n  @Input()\n  maxRating: number = 5;\n  @Input()\n  fontSize: string = '28px';\n\n  public readonly eventInfo = (() => {\n    const id = new Date().getTime();\n    const topic = `star-rating:${id}:changed`;\n    return {\n      topic,\n    };\n  })();\n\n  ngOnInit(): void {\n    this.rating = this.rating || 3; //default after input`s initialization\n    for (let i = 0; i < this.maxRating; i++) {\n      this.iconsArray.push(i);\n    }\n  }\n\n  writeValue(obj: number): void {\n    this.rating = obj;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.readonly = isDisabled ? \"true\" : \"false\";\n  }\n\n  changeRating(event) {\n    if (this.readonly && this.readonly === 'true') return;\n    // event is different for firefox and chrome\n    let id = event.target.id ? parseInt(event.target.id) : parseInt(event.target.parentElement.id);\n    if (this.halfStar && this.halfStar === 'true') {\n      this.rating = ((this.rating - id > 0) && (this.rating - id <= 0.5)) ? id + 1 : id + .5;\n    } else {\n      this.rating = id + 1;\n    }\n    // subscribe this event to get the changed value in your parent compoanent\n    this.ionicRatingService.publishStartRatingChanged(this.rating);\n    this.ionicRatingService.publishTopic(this.eventInfo.topic, this.rating);\n    // unique event\n    this.ratingChanged.emit(this.rating);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IonicRatingComponent } from './ionic-rating.component';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\n\n\n@NgModule({\n  declarations: [IonicRatingComponent],\n  imports: [\n    CommonModule,\n    IonicModule,\n  ],\n  exports: [IonicRatingComponent]\n})\nexport class IonicRatingComponentModule { }\n","/*\n * Public API Surface of ionic-rating\n */\n\nexport * from './lib/ionic-rating.service';\nexport * from './lib/ionic-rating.component';\nexport * from './lib/ionic-rating.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.IonicRatingService"],"mappings":"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"}}}